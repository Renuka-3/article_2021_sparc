library(ggbeeswarm)
library(ggsignif)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
rmarkdown::render('age.Rmd','md_document')
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
install.packages("xfun", type="binary")
library(xfun)
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
library(knitr)
require(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
phy20.1 <- readRDS("data/processed/phyloseq/phy20.1.RDS")
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
sd <- round(100* sd((ps.core, detection = core_detection), 1)))
sd <- round(100* sd((ps.core detection = core_detection), 1)))
sd <- round(100* sd((detection = core_detection), 1)))
sd <- round(100* SD = sd(ps.core))
sd <- round(100* SD=sd(ps.core))
sd <- round(100* SD=sd(ps.core))
sd <- round(100 * apply(abundances(ps.core), 1, SD), 1)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
#sd <- round(100* sd((ps.core, detection = core_detection), 1)))
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
view(sd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- sd(abundances(ps.core))
view(sd)
view(sd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
view(sd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- ((abundances(ps.core), 1, sd)1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- (abundances(ps.core), 1, sd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- (abundances(ps.core) sd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- sd(abundances(ps.core))
sd
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- sd(abundances(ps.core),1)
sd
sdd <- sapply(abundaces(ps.core), sd)
sdd <- sapply(abundances(ps.core), sd)
kable(sdd)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- sd(abundances(ps.core))
kable(sd)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "sd")
kable(d)
sd <- round(apply(abundances(ps.core), 1, sd), 1)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "sd")
kable(d)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- round(apply(abundances(ps.core), 1, sd), 1)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "Standard deviation")
kable(d)
sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd
sd <- round(100 * apply(abundances(ps.core), 1, sd), 2)
sd
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- round(apply(abundances(ps.core), 1, sd), 2)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "Standard deviation")
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 50, topn=50)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 80, topn=80)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 180, topn=180)
library(knitr)
require(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
phy20.1 <- readRDS("data/processed/phyloseq/phy20.1.RDS")
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
###sd <- round(100 * apply(abundances(ps.core), 1, sd), 1)
sd <- round(apply(abundances(ps.core), 1, sd), 2)
###sd <- sd(abundances(ps.core))
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev, sd = sd))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)", "Standard deviation")
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1),
sd= round(sd(value),2))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
rmarkdown::render(core.Rmd, md_document)
rmarkdown::render(core.Rmd, core.md)
rmarkdown::render(core.Rmd, output_format = md_document)
rmarkdown::render(core.Rmd, output_format = "core.md")
rmarkdown::render("core.Rmd", output_format = "core.md")
rmarkdown::render(file ="core.Rmd", output_format = "core.md")
rmarkdown::render('core.Rmd','md_documen')
rmarkdown::render('core.Rmd','md_document')
