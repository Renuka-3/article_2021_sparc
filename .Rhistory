#}
#@#else {
#@#  stat.test <- stat.test %>% mutate(y.position = c(0.04, 0.025, 0.035))
#@# }
stat.test$P.adj.signif <-cut(stat.test$P.adj, breaks=c(0, 0.001, 0.01, 0.05, 1), labels=c("***", "**","*","ns"))
# Add small pseudocount to enable visualization
d$taxa <- d$taxa + min(abundances(ps)[abundances(ps)>0])/2
p <- ggboxplot(d, x = "Geographical_location", y = "taxa", xlab = FALSE,  ylab = "Abundance (%)", font.y = c(18,"bold"), font.xtickslab = 18, font.ytickslab = 18, linetype = "solid",size = 0.5, title =as.vector(tax_table(ps)[tax, "genus"]), font.main = c(22,"bold.italic")) + stat_pvalue_manual(stat.test, label = "P.adj.signif", hide.ns=TRUE)
figures[[tax]] <- p
print(p)
}
#p1 <- figures[[1]]
#stat.test <- stat.test %>% mutate(y.position = c(0.085, 0.025, 0.083))
#p1 <- ggboxplot(d, x = "Geographical_location", y = "taxa", xlab = FALSE,  ylab = "Abundance(%)", font.y = c(18,"bold"), font.xtickslab = 18, font.ytickslab = 18, linetype = "solid",size = 0.5, title =as.vector(tax_table(ps)[tax, "genus"]), font.main = c(22,"bold.italic")) + stat_pvalue_manual(stat.test, label = "P.adj.signif", hide.ns=TRUE)
#print(p1)
#stat.test$P.adj.signif <- stat.test$P.adj(c("<=0.1", "<=0.01", "<=0.001", "<=0.001"), lable =c("NS", "*", "**", "***"))
theme_set(theme_bw(base_size=25))
library(readr)
library(tidyverse)
otu_data <- abundances(phy)
meta_data <- meta(phy)
# To get this, clone
# https://github.com/FrederickHuangLin/ANCOM.git
library(compositions)
source("ANCOM/scripts/ancom_v2.1.R")
# Step 1: Data preprocessing
feature_table = otu_data;
sample_var = "Sample";
group_var = NULL
out_cut = 0.05;
zero_cut = 0.90;
lib_cut = 1000;
neg_lb = FALSE
prepro = feature_table_pre_process(feature_table,
meta_data,
sample_var,
group_var,
out_cut,
zero_cut,
lib_cut,
neg_lb)
feature_table = prepro$feature_table # Preprocessed feature table
meta_data = prepro$meta_data # Preprocessed metadata
struc_zero = prepro$structure_zeros # Structural zero info
# Step 2: ANCOM
main_var <- "Geographical_location";
p_adj_method <- "BH";
alpha <- 0.05
adj_formula <- NULL;
rand_formula <- NULL
res <- ANCOM(feature_table, meta_data, struc_zero,
main_var, p_adj_method,
alpha, adj_formula, rand_formula)
#write_csv(res$out, "ancom.csv")
res.sorted <- res$out %>% arrange(desc(W))
top.taxa <- res.sorted[which(res.sorted[,3]), "taxa_id"]
head(res.sorted)
ps <- microbiome::transform(phy, "compositional")
d <- meta(ps)
library(FSA)
p.adj.method <- "bh"
dunn.results <- list()
figures <- list()
library(beeswarm)
for (tax in top.taxa) {
d$taxa <- abundances(ps)[tax, ]
re <- dunnTest(taxa ~ Geographical_location,data=d, method = p.adj.method, list= TRUE) #Pairwise comparisons using Dunn test
dunn.results[[tax]] <- re
#print(dunn.results)
stat.test <- re$res
stat.test$group1 <- stringr::word(re$res$Comparison, 1)
stat.test$group2 <- stringr::word(re$res$Comparison, 3)
head(stat.test)
##@##stat.test <- stat.test %>% mutate(y.position = c(0.04, 0.025, 0.035))
stat.test <- stat.test %>% mutate(y.position = c(0.025, 0.015, 0.02))
#@#if (tax == "Corynebacterium") {
#@# stat.test <- stat.test %>% mutate(y.position = c(0.65, 0.6, 0.58))
#}
#@#else {
#@#  stat.test <- stat.test %>% mutate(y.position = c(0.04, 0.025, 0.035))
#@# }
stat.test$P.adj.signif <-cut(stat.test$P.adj, breaks=c(0, 0.001, 0.01, 0.05, 1), labels=c("***", "**","*","ns"))
# Add small pseudocount to enable visualization
d$taxa <- d$taxa + min(abundances(ps)[abundances(ps)>0])/2
p <- ggboxplot(d, x = "Geographical_location", y = "taxa", xlab = FALSE,  ylab = "Abundance (%)", font.y = c(18,"bold"), font.xtickslab = 18, font.ytickslab = 18, linetype = "solid",size = 0.5, title =as.vector(tax_table(ps)[tax, "genus"]), font.main = c(22,"bold.italic")) + stat_pvalue_manual(stat.test, label = "P.adj.signif", hide.ns=TRUE)
figures[[tax]] <- p
print(p)
}
#p1 <- figures[[1]]
#stat.test <- stat.test %>% mutate(y.position = c(0.085, 0.025, 0.083))
#p1 <- ggboxplot(d, x = "Geographical_location", y = "taxa", xlab = FALSE,  ylab = "Abundance(%)", font.y = c(18,"bold"), font.xtickslab = 18, font.ytickslab = 18, linetype = "solid",size = 0.5, title =as.vector(tax_table(ps)[tax, "genus"]), font.main = c(22,"bold.italic")) + stat_pvalue_manual(stat.test, label = "P.adj.signif", hide.ns=TRUE)
#print(p1)
#stat.test$P.adj.signif <- stat.test$P.adj(c("<=0.1", "<=0.01", "<=0.001", "<=0.001"), lable =c("NS", "*", "**", "***"))
theme_set(theme_bw(base_size=25))
library(readr)
library(tidyverse)
otu_data <- abundances(phy)
meta_data <- meta(phy)
# To get this, clone
# https://github.com/FrederickHuangLin/ANCOM.git
library(compositions)
source("ANCOM/scripts/ancom_v2.1.R")
# Step 1: Data preprocessing
feature_table = otu_data;
sample_var = "Sample";
group_var = NULL
out_cut = 0.05;
zero_cut = 0.90;
lib_cut = 1000;
neg_lb = FALSE
prepro = feature_table_pre_process(feature_table,
meta_data,
sample_var,
group_var,
out_cut,
zero_cut,
lib_cut,
neg_lb)
feature_table = prepro$feature_table # Preprocessed feature table
meta_data = prepro$meta_data # Preprocessed metadata
struc_zero = prepro$structure_zeros # Structural zero info
# Step 2: ANCOM
main_var <- "Geographical_location";
p_adj_method <- "BH";
alpha <- 0.05
adj_formula <- NULL;
rand_formula <- NULL
res <- ANCOM(feature_table, meta_data, struc_zero,
main_var, p_adj_method,
alpha, adj_formula, rand_formula)
#write_csv(res$out, "ancom.csv")
res.sorted <- res$out %>% arrange(desc(W))
top.taxa <- res.sorted[which(res.sorted[,3]), "taxa_id"]
head(res.sorted)
ps <- microbiome::transform(phy, "compositional")
d <- meta(ps)
library(FSA)
p.adj.method <- "bh"
dunn.results <- list()
figures <- list()
library(beeswarm)
for (tax in top.taxa) {
d$taxa <- abundances(ps)[tax, ]
re <- dunnTest(taxa ~ Geographical_location,data=d, method = p.adj.method, list= TRUE) #Pairwise comparisons using Dunn test
dunn.results[[tax]] <- re
#print(dunn.results)
stat.test <- re$res
stat.test$group1 <- stringr::word(re$res$Comparison, 1)
stat.test$group2 <- stringr::word(re$res$Comparison, 3)
head(stat.test)
stat.test <- stat.test %>% mutate(y.position = c(0.025, 0.015, 0.02))
stat.test$P.adj.signif <-cut(stat.test$P.adj, breaks=c(0, 0.001, 0.01, 0.05, 1), labels=c("***", "**","*","ns"))
# Add small pseudocount to enable visualization
d$taxa <- d$taxa + min(abundances(ps)[abundances(ps)>0])/2
p <- ggboxplot(d, x = "Geographical_location", y = "taxa", xlab = FALSE,  ylab = "Abundance (%)", font.y = c(18,"bold"), font.xtickslab = 18, font.ytickslab = 18, linetype = "solid",size = 0.5, title =as.vector(tax_table(ps)[tax, "genus"]), font.main = c(22,"bold.italic")) + stat_pvalue_manual(stat.test, label = "P.adj.signif", hide.ns=TRUE)
figures[[tax]] <- p
print(p)
}
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Geographical_location))$p.value
#kruskal.test(data = df, index ~factor(Geographical_location))
library(ggbeeswarm)
library(ggsignif)
#jpeg(file= "figure_location.jpeg", quality = 100)
p1 <- ggplot(df, aes(x = Geographical_location, y = index)) +
geom_boxplot(color = "black") +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Geographical location")
print(p1)
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Geographical_location))$p.value
kruskal.test(data = df, index ~factor(Geographical_location))
library(ggbeeswarm)
library(ggsignif)
#jpeg(file= "figure_location.jpeg", quality = 100)
p1 <- ggplot(df, aes(x = Geographical_location, y = index)) +
geom_boxplot(color = "black") +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Geographical location")
print(p1)
rmarkdown::render("location.Rmd", output_format="md_document")
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(microbiome)
library(microbiome)
library(phyloseq)
library(vegan)
library(ggpubr)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_location/")
opts_chunk$set(dev="CairoPNG")
# Was created with: source("create_phyloseq.R")
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
index <- "diversity_shannon"
# Estimate alpha diversities
A <- alpha(phy)
b <- meta(phy)
b2 <- bind_cols(b,A)
is.data.frame(b)
is.data.frame(b2)
z<- sapply(split(b2$diversity_shannon, b2$Geographical_location), mean)
f <- sapply(split(b2$diversity_shannon, b2$Geographical_location), sd)
v <- cbind(z,f)
kable(v)
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Geographical_location))$p.value
kruskal.test(data = df, index ~factor(Geographical_location))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Geographical_location, y = index)) +
geom_boxplot(color = "black") +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Geographical location")
print(p1)
rmarkdown::render("location.Rmd", output_format="md_document")
library(knitr)
require(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 20/100
# Was created with: source("create_phyloseq.R")
phy20.1 <- readRDS("data/processed/phyloseq/phy20.1.RDS")
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
theme_set(theme_bw(base_size = 18))
core_detection1 <- .1/100
core_prevalence <- 20/100
b <- aggregate_taxa(phy20.1, "genus")
b <- microbiome::transform(b, "compositional")
b.core <- core(b, detection = core_detection1, prevalence = core_prevalence)
x <- prevalence(b.core)
bs <- melt(abundances(b.core))
bs$new <- bs$Var1
bs$new <- gsub(bs$new, pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
names(x) <- gsub(names(x), pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
df <- data.frame(Genus = names(x), prevalence = x) %>% arrange(prevalence)
sorted.names <- df$Genus
df$Genus <- factor(df$Genus, levels = sorted.names)
bs$new <- factor(bs$new, levels=sorted.names)
p4 <- ggplot(bs, aes(x = new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_continuous(label = scales::percent) +
#scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance")
print(p4)
theme_set(theme_bw(base_size = 33))
x <- prevalence(b.core)
df <- data.frame(prevalence = x) %>% arrange(prevalence) # Also sort by prevalence
names(x) <- gsub(names(x), pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
df <- data.frame(Genus = names(x), prevalence = x) %>% arrange(prevalence)
sorted.names <- df$Genus
df$Genus <- factor(df$Genus, levels = sorted.names)
#png("core.png", width = 500, height = 500, res = 300)
g <- ggplot(df, aes(x = df$Genus, y = prevalence)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
scale_y_continuous(label = scales::percent) +
labs(y = "Prevalence (%)", x = '', title = "Core prevalence")
#print(g)
#dev.off()
library("gridExtra")
#png("core.png", width = 500, height = 500, res = 300)
grid.arrange(p4,g, nrow=1)
#dev.off()
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
print(p2)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
theme_set(theme_bw(base_size = 18))
core_detection1 <- .1/100
core_prevalence <- 20/100
b <- aggregate_taxa(phy20.1, "genus")
b <- microbiome::transform(b, "compositional")
b.core <- core(b, detection = core_detection1, prevalence = core_prevalence)
x <- prevalence(b.core)
bs <- melt(abundances(b.core))
bs$new <- bs$Var1
bs$new <- gsub(bs$new, pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
names(x) <- gsub(names(x), pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
df <- data.frame(Genus = names(x), prevalence = x) %>% arrange(prevalence)
sorted.names <- df$Genus
df$Genus <- factor(df$Genus, levels = sorted.names)
bs$new <- factor(bs$new, levels=sorted.names)
p4 <- ggplot(bs, aes(x = new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_continuous(label = scales::percent) +
#scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance")
#print(p4)
theme_set(theme_bw(base_size = 33))
x <- prevalence(b.core)
df <- data.frame(prevalence = x) %>% arrange(prevalence) # Also sort by prevalence
names(x) <- gsub(names(x), pattern = "Propionibacterium", replacement = "Propionibacterium/Cutibacterium")
df <- data.frame(Genus = names(x), prevalence = x) %>% arrange(prevalence)
sorted.names <- df$Genus
df$Genus <- factor(df$Genus, levels = sorted.names)
#png("core.png", width = 500, height = 500, res = 300)
g <- ggplot(df, aes(x = df$Genus, y = prevalence)) +
geom_bar(stat = "identity") +
coord_flip() +
theme(axis.text.x = element_text(angle = 0, hjust = 1)) +
scale_y_continuous(label = scales::percent) +
labs(y = "Prevalence (%)", x = '', title = "Core prevalence")
#print(g)
#dev.off()
library("gridExtra")
#png("core.png", width = 500, height = 500, res = 300)
grid.arrange(p4,g, nrow=1)
#dev.off()
rmarkdown::render("core.Rmd", output_format="md_document")
