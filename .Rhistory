ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
#kable(d)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
#print(p2)
theme_set(theme_bw(base_size = 13))
dfm <- melt(abundances(ps.core))
dfm$Var1 <- factor(dfm$Var1, levels = rev(d$Taxon))
dfm$Var_new = str_wrap(dfm$Var1, width = 40)
p2 <- ggplot(dfm, aes(x = Var_new, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
print(p2)
a <- data.table:::print.data.table(dfm, nrows = 20)
a <- data.table:::print.data.table(dfm, topn=20)
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 20, topn=20)
rmarkdown::render('core.Rmd','md_document')
library("phyloseq")
library("ggplot2")
library("cluster")
library("igraph")
library("markovchain")
library("RColorBrewer")
library(microbiome)
library("gridExtra")
library(tidyr)
library(dplyr)
set.seed(455423)
options(stringsAsFactors = FALSE)
theme_set(theme_bw())
# Init / Read data
ps <- readRDS("data/processed/phyloseq/phy20.1.RDS")
tt <- data.frame(tax_table(ps))
ps <- transform(ps, "compositional")
braydist <- phyloseq::distance(ps, method="bray")
ord <- ordinate(ps, method = "MDS", distance = braydist)
#plot_scree(ord) + xlim(as.character(seq(1,15))) + ggtitle("MDS-bray ordination eigenvalues")
evs <- ord$value$Eigenvalues
#print(evs[1:20])
#print(tail(evs))
#h_sub5 <- hist(evs[6:length(evs)], 100)
#plot(h_sub5$mids, h_sub5$count, log="y", type='h', lwd=10, lend=2)
NDIM <- which(cumsum(evs^2/sum(evs^2)) > 0.9) - 1 # Pick components so that we reach 90% information
x <- ord$vectors[,1:NDIM]  # rows=sample, cols=MDS axes, entries = value
pamPCoA = function(x, k) {
list(cluster = pam(x[,1:2], k, cluster.only = TRUE))
}
gs <- clusGap(x, FUN = pamPCoA, K.max = 12, B = 50)
#plot_clusgap(gs) + scale_x_continuous(breaks=c(seq(0, 12, 2)))
K <- 3
x <- ord$vectors[,1:NDIM]
clust <- as.factor(pam(x, k=K, cluster.only=T))
sample_data(ps)$CST <- clust
CSTs <- as.character(seq(K))
fisher.test(table(sample_data(ps)[, c("CST", "Geographical_location")]))
# Length 6 for consistency with pre-revision CST+ coloration
CSTColors <- brewer.pal(6,"Paired")[c(1,3,2,5,4,6)]
names(CSTColors) <- CSTs
#CSTColorScale <- scale_colour_discrete(name = "CST", values = CSTColors[1:K])
#CSTFillScale <- scale_fill_discrete(name = "CST", values = CSTColors[1:K])
ok <- ordinate(ps, method="NMDS", distance=braydist)
#plot_ordination(ps, ok, color="CST") + ggtitle("NMDS -- bray -- CST")
#plot_ordination(ps, ok, color="Geographical_location") + ggtitle("NMDS -- bray -- Location")
theme_set(theme_bw(base_size=33))
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
#p1 <- plot_landscape(microbiome::transform(ps , "compositional"),
#                    distance = distance,
#                    method = method,
#                    size = 4,
#                    col = "Geographical_location",
#                    shading = FALSE) +
#  scale_colour_brewer(palette = "Set1")	+ labs(title = "Geographical location") + theme(legend.position = 'bottom', legend.text=element_text(size=30)) +theme(legend.title=element_blank())
#print(p1)
#p2 <- plot_landscape(microbiome::transform(ps , "compositional"),
#                    distance = distance,
#                    method = method,
#                    size = 4,
#                    col = "CST",
#                    shading = FALSE) +
#  labs(title = "CST") +
#  scale_colour_brewer(palette = "Set1") +theme(legend.position = 'bottom', legend.text=element_text(size=30)) + theme(legend.title=element_blank())
#print(p2)
#gridExtra::grid.arrange(p1, p2, nrow = 1)
p3 <- microbiome::transform(ps, "compositional")
ordi <- ordinate(p3, method="PCoA", distance="bray")
p4 <- plot_ordination(p3, ordi, color="Geographical_location")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=30)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size = 30)) + theme(axis.title = element_text(size = 33)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title= "C. Geographical location")
print(p4)
p8 <- microbiome::transform(ps, "compositional")
ordi <- ordinate(p8, method="PCoA", distance="bray")
p9 <- plot_ordination(p8, ordi, color="CST")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=35)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size = 30)) + theme(axis.title = element_text(size = 33)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title = "D. CST")
print(p9)
gridExtra::grid.arrange(p4, p9, nrow = 1)
theme_set(theme_bw(base_size = 23))
library(BBmisc)
library(reshape2)
library("RColorBrewer")
library(tidyr)
set.seed(1234)
# Identify ASVs that are most different between CSTs
pvs <- c()
for (tax in taxa(ps)) {
pvs[[tax]] <- kruskal.test(abundances(ps)[tax,] ~ meta(ps)$CST)$p.value
}
pvs <- sort(unlist(pvs))
significant.taxa <- names(pvs)[which(as.numeric(p.adjust(pvs)) < 0.25)]
# Pick full names for the taxa
full.names <- apply(tax_table(ps), 1, function (x) {paste(x, collapse = "_")})
pso<- prune_taxa(significant.taxa, ps)
pso1<- microbiome::transform(pso, 'clr')
g<- otu_table(pso1)
g1<-BBmisc::normalize(g@.Data, 'standardize', range = c(0,1))
colnames(g1)<- colnames(otu_table(pso1)@.Data)
j<- otu_table(g1, taxa_are_rows = T)
otu_table(pso1)<- j
p <- list()
sort.taxa <- neatsort(pso1, "rows")
dfm <- tab <- data.frame(ASV = significant.taxa, Full_name = full.names[significant.taxa])
dfm$short_name <- dfm$Full_name %>% strsplit("_" ) %>% sapply(tail, 1 )
#tab$short_names <- tab$Full_name %>% strsplit("_" ) %>% sapply(tail, 1 )
for(CST in CSTs) {
pshm <- prune_samples(sample_data(pso1)$CST == CST, pso1)
dfm <- melt(abundances(pshm))
dfm$short_name <- full.names[as.character(dfm$Var1)] %>% strsplit("_" ) %>% sapply(tail, 1 )
p[[CST]]<- heat((dfm), "Var2","short_name", "value", legend.text = "Abundance", order.rows = F,
order.cols = F, limits= c(-5,5), step = 2) +
ggtitle(paste("CST:", CST)) + theme(axis.text.x = element_blank()) +labs(x= "Individuals")
print(p[[CST]])
}
theme_set(theme_bw(base_size=33))
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
p3 <- microbiome::transform(ps, "compositional")
ordi <- ordinate(p3, method="PCoA", distance="bray")
p4 <- plot_ordination(p3, ordi, color="Geographical_location")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=30)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size = 30)) + theme(axis.title = element_text(size = 33)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title= "C. Geographical location")
#print(p4)
p8 <- microbiome::transform(ps, "compositional")
ordi <- ordinate(p8, method="PCoA", distance="bray")
p9 <- plot_ordination(p8, ordi, color="CST")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=35)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size = 30)) + theme(axis.title = element_text(size = 33)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title = "D. CST")
gridExtra::grid.arrange(p4, p9, nrow = 1)
rmarkdown::render('CSTAnalysis_SkinSamples.Rmd')
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
library(knitr)
library(knitcitations)
library(microbiome)
library(ggplot2)
library(dplyr)
library(vegan)
library(phyloseq)
library(microbiome)
library(phyloseq)
library(reshape2)
opts_chunk$set(dev="CairoPNG")
knitr::opts_chunk$set(fig.path="figure_joint/")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
library(knitr)
library(knitcitations)
library(ggplot2)
library(dplyr)
library(reshape2)
opts_chunk$set(dev="CairoPNG")
knitr::opts_chunk$set(fig.path="figure_joint/")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
theme_set(theme_bw(40))
phy.temp <- phy
sample_data(phy.temp)$Diet <- as.factor(gsub("Veg", "Vegetarian", sample_data(phy.temp)$Diet))
V <- microbiome::transform(phy.temp, "compositional")
ord <- ordinate(V, method="PCoA", distance="bray")
p <- plot_ordination(V, ord, color="Diet")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=35)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=30), axis.text.y = element_text(size = 30)) + theme(axis.title = element_text(size = 35)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title = "A. Diet")
print(p)
phy.tempp <- phy
sample_data(phy.tempp)$age_group <- as.factor(gsub("middle_age", "Middle age", sample_data(phy.temp)$age_group))
sample_data(phy.tempp)$age_group<- as.factor(gsub("adult", "Adult", sample_data(phy.tempp)$age_group))
sample_data(phy.tempp)$age_group<- as.factor(gsub("elderly", "Elderly", sample_data(phy.tempp)$age_group))
V1 <- microbiome::transform(phy.tempp, "compositional")
ord <- ordinate(V1, method="PCoA", distance="bray")
p2 <- plot_ordination(V1, ord, color="age_group")+ geom_point(size=5) + theme(legend.position = 'bottom', legend.text=element_text(size=35)) + theme(legend.title=element_blank()) + theme(axis.text.x = element_text(size=33), axis.text.y = element_text(size = 33)) + theme(axis.title = element_text(size = 33)) + labs(x = "PC1 [28.4%]", y= " PC2 [17.7%]", title = "B. Age group")
print(p2)
gridExtra::grid.arrange(p, p2, nrow = 1)
rmarkdown::render('jointanalysis.Rmd','md_document')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(ggsignif)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_diet/")
# Was created with: source("create_phyloseq.R")
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
#head(A)
t <- meta(phy)
t2 <- bind_cols(t,A)
is.data.frame(t)
is.data.frame(t2)
s <- sapply(split(t2$diversity_shannon, t2$Diet), mean)
g <- sapply(split(t2$diversity_shannon, t2$Diet), sd)
y <- cbind(s,g)
kable(y)
theme_set(theme_bw(base_size = 25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Diet))$p.value
wilcox.test(data = df, index ~factor(Diet))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Diet, y = index)) +
geom_boxplot() +
geom_jitter(width = 0.05) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +scale_x_discrete(limits = c("Mixed", "Veg"),
labels = c("Mixed", "Vegetarian")) +theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Diet") #+ geom_signif(comparisons = list(c("Mixed", "Veg")), map_signif_level = TRUE)
print(p1)
#dev.off()
theme_set(theme_bw(base_size = 25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- wilcox.test(data = df, index ~ factor(Diet))$p.value
wilcox.test(data = df, index ~factor(Diet))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = Diet, y = index)) +
geom_boxplot() +
geom_jitter(width = 0.05) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +scale_x_discrete(limits = c("Mixed", "Veg"),
labels = c("Mixed", "Vegetarian")) +theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Diet") #+ geom_signif(comparisons = list(c("Mixed", "Veg")), map_signif_level = TRUE)
print(p1)
#dev.off()
rmarkdown::render('diet.Rmd','md_documents')
rmarkdown::render('diet.Rmd','md_document')
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
knitr::opts_chunk$set(echo =F)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(reshape2)
library(tidyverse)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_age/")
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
w <- sample_data(phy)$age_group <- cut(meta(phy)$Age, breaks = c(0, 40, 59, Inf), labels = c("adult", "middle_age", "elderly"))
library(microbiome)
opts_chunk$set(dev="CairoPNG")
# Estimate alpha diversities
A <- alpha(phy)
index <- "diversity_shannon"
c <- meta(phy)
c2 <- bind_cols(c,A)
is.data.frame(c)
is.data.frame(c2)
i <- sapply(split(c2$diversity_shannon, c2$age_group), mean)
o <- sapply(split(c2$diversity_shannon, c2$age_group), sd)
y <- cbind(i,o)
kable(y)
library(Cairo)
theme_set(theme_bw(base_size=25))
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(age_group))$p.value
kruskal.test(data = df, index ~ factor(age_group))
library(ggbeeswarm)
library(ggsignif)
p1 <- ggplot(df, aes(x = age_group, y = index)) +
geom_boxplot() + theme(legend.position="top", legend.title = element_text("Stats"))  +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 0.5),axis.title.x = element_text()) +
scale_x_discrete(limits = c("adult", "middle_age", "elderly"),
labels = c("Adult", "Middle age", "Elderly")) +
labs(y = "Shannon Diversity", x = "", title = "Age") +
geom_signif(comparisons = list(c("adult", "middle_age", "elderly")), map_signif_level = TRUE)
print(p1)
##Multiple pairwise comparison
qw <- subset(df, age_group %in% c("adult", "middle_age"))
renu <- wilcox.test(data = qw, index ~ factor(age_group))$p.value
wilcox.test(data = qw, index ~factor(age_group))
er<- subset(df, age_group %in% c("adult", "elderly"))
ru <- wilcox.test(data = er, index ~ factor(age_group))$p.value
wilcox.test(data = er, index ~factor(age_group))
ty<- subset(df, age_group %in% c("middle_age", "elderly"))
en <- wilcox.test(data = ty, index ~ factor(age_group))$p.value
wilcox.test(data = ty, index ~factor(age_group))
p.adjust(c(0.001,0.01,0.05,0.1), method = "bonferroni")
rmarkdown::render('age.Rmd','md_document')
