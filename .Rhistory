library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
# Was created with: source("create_phyloseq.R")
phy<- readRDS("data/processed/phyloseq/phy20.1.RDS")
# Exclude middle-aged group
Q <- subset_samples(phy, !age_group %in% "middle_age")
# Old code
# Remove <- c("I1", "I2", "I6", "I9", "I10", "I11", "I16", "I19", "I22", "I25", "I27","I28", "I29", "I31","I34", "I40")
#subset_samples(phy20.1, Sample %in% Remove)
# Q <- subset_samples(phy, !(Sample %in% Remove))
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
opts_chunk$set(dev="CairoPNG")
method <- "PCoA"
trans <- "compositional"
distance <- "jaccard"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
theme_set(theme_bw(15))
library(microbiome)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet + Geographical_location + age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet" + "Geographical_location" + "age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
library(microbiome)
library(ggplot2)
library(dplyr)
pseq <- phy
data = microbiome::meta(phy)
# Pick relative abundances (compositional) and sample metadata
pseq.rel <- microbiome::transform(pseq, "compositional")
otu <- abundances(pseq.rel)
meta <- meta(pseq.rel)
library(vegan)
library(phyloseq)
adonis(t(otu_table(phy)) ~ Diet + Geographical_location + Age, data = meta(phy), permutations=99, method = "bray")
adonis(t(otu_table(phy)) ~ meta(phy)$Diet + meta(phy)$Geographical_location + meta(phy)$Age, data = meta(phy), permutations=99, method = "bray")
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
padj.th <- 0.25mypseq <- phy
mypseq <- phy
# Remove NAs
group <- "Diet" + "Geographical_location" + "Age"
mygroup <- "Diet + Geographical_location + Age"
# Remove NAs
group <- "Diet" + "Geographical_location" + "Age"
#permanova <- adonis(t(otu) ~ Age,data = meta(Q), permutations=99, method = "bray")
#adonis(t(otu_table(phy)) ~ Diet + Geographical_location + Age, data = meta(phy), permutations=99, method = "bray")
adonis(t(otu_table(phy)) ~ meta(phy)$Diet + meta(phy)$Geographical_location + meta(phy)$age_group, data = meta(phy), permutations=99, method = "bray")
#permanova <- adonis(t(otu) ~ Age,data = meta(Q), permutations=99, method = "bray")
#adonis(t(otu_table(phy)) ~ Diet + Geographical_location + Age, data = meta(phy), permutations=99, method = "bray")
adonis(t(otu_table(phy)) ~ meta(phy)$Diet + meta(phy)$Geographical_location + meta(phy)$Age, data = meta(phy), permutations=99, method = "bray")
# Remove NAs
group <- "Diet" + "Geographical_location" + "age_group"
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
opts_chunk$set(dev="CairoPNG")
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(tidyverse)
library(dada2)
library(tidyverse)
library(dada2)
library(dplyr)
opts_chunk$set(dev="CairoPNG")
method <- "PCoA"
trans <- "compositional"
distance <- "jaccard"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
theme_set(theme_bw(15))
library(microbiome)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet+Geographical_location+age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet" + "Geographical_location" + "age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p)
p1 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Geographical_location",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p1)
p2 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p2)
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
group <- "Diet" + "Geographical_location" + "age_group"
```{r DESeq2, echo=FALSE, message=FALSE, fig.width=9, fig.height=5, out.width="50%", fig.show="hold"}
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
group <- "Diet"
keep <- meta(phy)[, group] %>% complete.cases()
df <- meta(mypseq)[keep, ]
mygroup <- "Diet" + "Geographical_location" + "age_group"
df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
#apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
#top.taxa <- as.character(df$taxon)
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
df <- meta(phy)
ps <- microbiome::transform(phy, "clr")
for (tax in top.taxa) {
df$taxa <- abundances(ps)[tax, ]
p <- ggplot(df, aes(x = , y = taxa)) +
geom_boxplot() +
ggbeeswarm::geom_beeswarm() +
theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
labs(x = "", y = "Abundance", title = tax)
print(p)
}
rlang::last_error()
library(ggplot2)
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
#apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
#top.taxa <- as.character(df$taxon)
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
df <- meta(phy)
ps <- microbiome::transform(phy, "clr")
for (tax in top.taxa) {
df$taxa <- abundances(ps)[tax, ]
p <- ggplot(df, aes(x = , y = taxa)) +
geom_boxplot() +
ggbeeswarm::geom_beeswarm() +
theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
labs(x = "", y = "Abundance", title = tax)
print(p)
}
print(p)```
df <- meta(phy)
ps <- microbiome::transform(phy, "clr")
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
opts_chunk$set(dev="CairoPNG")
method <- "PCoA"
trans <- "compositional"
distance <- "jaccard"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
theme_set(theme_bw(15))
library(microbiome)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p)
p1 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Geographical_location",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p1)
p2 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p2)
library(microbiome)
library(ggplot2)
library(dplyr)
pseq <- phy
data = microbiome::meta(phy)
# Pick relative abundances (compositional) and sample metadata
pseq.rel <- microbiome::transform(pseq, "compositional")
otu <- abundances(pseq.rel)
meta <- meta(pseq.rel)
library(vegan)
library(phyloseq)
#adonis(t(otu_table(phy)) ~ Diet + Geographical_location + Age, data = meta(phy), permutations=99, method = "bray")
adonis(t(otu_table(phy)) ~ meta(phy)$Diet + meta(phy)$Geographical_location + meta(phy)$age_group, data = meta(phy), permutations=99, method = "bray")
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
#apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
#top.taxa <- as.character(df$taxon)
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
#df <- meta(phy)
#ps <- microbiome::transform(phy, "clr")
#for (tax in top.taxa) {
# df$taxa <- abundances(ps)[tax, ]
# p <- ggplot(df, aes(x = , y = taxa)) +
#   geom_boxplot() +
#   ggbeeswarm::geom_beeswarm() +
#    theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
#   labs(x = "", y = "Abundance", title = tax)
#  print(p)}
knitr::knit("joint_analysis.Rmd")
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
library(knitr)
library(knitcitations))
library(microbiome)
library(phyloseq)
library(vegan)
library(Cairo)
library(knitr)
library(knitcitations)
opts_chunk$set(dev="CairoPNG")
method <- "PCoA"
trans <- "compositional"
distance <- "jaccard"
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
theme_set(theme_bw(15))
library(microbiome)
p <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Diet",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p)
p1 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "Geographical_location",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p1)
p2 <- plot_landscape(microbiome::transform(phy , "compositional"),
distance = "jaccard",
method = "PCoA",
size = 3,
col = "age_group",
shading = FALSE) +
scale_colour_brewer(palette = "Set1")
print(p2)
library(microbiome)
library(ggplot2)
library(dplyr)
pseq <- phy
data = microbiome::meta(phy)
# Pick relative abundances (compositional) and sample metadata
pseq.rel <- microbiome::transform(pseq, "compositional")
otu <- abundances(pseq.rel)
meta <- meta(pseq.rel)
library(vegan)
library(phyloseq)
#adonis(t(otu_table(phy)) ~ Diet + Geographical_location + Age, data = meta(phy), permutations=99, method = "bray")
adonis(t(otu_table(phy)) ~ meta(phy)$Diet + meta(phy)$Geographical_location + meta(phy)$age_group, data = meta(phy), permutations=99, method = "bray")
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
#sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
#apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
#top.taxa <- as.character(df$taxon)
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
#df <- meta(phy)
#ps <- microbiome::transform(phy, "clr")
#for (tax in top.taxa) {
# df$taxa <- abundances(ps)[tax, ]
# p <- ggplot(df, aes(x = , y = taxa)) +
#   geom_boxplot() +
#   ggbeeswarm::geom_beeswarm() +
#    theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
#   labs(x = "", y = "Abundance", title = tax)
#  print(p)}
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- Q
# Remove NAs
group <- "age_group"
keep <- meta(Q)[, group] %>% complete.cases()
df <- meta(mypseq)[keep, ]
mygroup <- "age_group"
df$group <- as.factor(df[[group]] == mygroup)
sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ age_group))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
#df <- df %>% arrange(desc(abs(log2FoldChange)), padj) %>%
#             filter(padj < padj.th)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
# WHat is the purpose of this one?
#full.names <- apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
# top.taxa <- as.character(df$taxon)
# Add full phylogenetic name for this OTU
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
df <- meta(Q)
ps <- microbiome::transform(Q, "clr")
for (tax in top.taxa) {
df$taxa <- abundances(ps)[tax, ]
p <- ggplot(df, aes(x = age_group, y = taxa)) +
geom_boxplot() +
ggbeeswarm::geom_beeswarm() +
theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
labs(x = "age_group", y = "Abundance", title = tax)
print(p)
}
library(phyloseq)
library(reshape2)
library(DESeq2)
padj.th <- 0.25
mypseq <- phy
# Remove NAs
#group <- "Diet"
#keep <- meta(phy)[, group] %>% complete.cases()
#df <- meta(mypseq)[keep, ]
#mygroup <- "Diet" + "Geographical_location" + "age_group"
#df$group <- as.factor(df[[group]] == mygroup)
#sample_data(mypseq) <- sample_data(df)
quiet(ds2 <- phyloseq_to_deseq2(mypseq, ~ Diet + Geographical_location))
dds <- DESeq(ds2)
res <- results(dds)
df <- as.data.frame(res)
df$taxon <- rownames(df)
df <- df %>% arrange(padj, desc(abs(log2FoldChange))) %>%
filter(padj < padj.th)
df <- subset(df, select= c(log2FoldChange, padj, taxon))
rownames(df) <- NULL
#apply(tax_table(Q), 1, function (x) {paste(x, collapse = "_")})
#top.taxa <- as.character(df$taxon)
df$full_name <- full.names[df$taxon]
library(knitr)
kable(df)
#df <- meta(phy)
#ps <- microbiome::transform(phy, "clr")
#for (tax in top.taxa) {
# df$taxa <- abundances(ps)[tax, ]
# p <- ggplot(df, aes(x = , y = taxa)) +
#   geom_boxplot() +
#   ggbeeswarm::geom_beeswarm() +
#    theme(axis.text.x = element_text(angle = 360, hjust = 1)) +
#   labs(x = "", y = "Abundance", title = tax)
#  print(p)}
knitr::knit("jointanalysis.Rmd")
