d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
core_detection1 <- .001/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
core_detection1 <- .08/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
{r core_phyla, echo=FALSE, message=FALSE, fig.width=10, fig.height=8, out.width="50%"}
kable(d)
core_detection1 <- .05/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
core_detection1 <- .005/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
core_detection1 <- .05/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
Yi <- ggplot(dfm, aes(x = Taxon, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Yi)
Yi <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Yi)
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
dfm$renu = str_wrap(dfm$d, width = 40)
dfm$renu <- dfm$d
Yi <- ggplot(dfm, aes(x = renu, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Yi)
Yi <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Yi)
dfma <- melt(abundances(ps.core1))
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
theme_set(theme_bw(base_size = 13))
dfma <- melt(abundances(ps.core1))
dfma$Var2 <- factor(dfma$Var2, levels = rev(d$Taxon))
dfma$Var_two = str_wrap(dfma$Var2, width = 40)
dfma$Var_two = str_wrap(dfma$Var2, width = 40)
p2 <- ggplot(dfma, aes(x = Var_two, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
print(p2)
library(knitr)
require(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
core_detection <- .1/100
core_prevalence <- 50/100
# Was created with: source("create_phyloseq.R")
phy20.1 <- readRDS("data/processed/phyloseq/phy20.1.RDS")
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Abundance_median = median, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Median Relative abundance (%)", "Prevalence (%)")
kable(d)
library(ggplot2)
library(phyloseq)
library(dada2)
library(readxl)
library(dplyr)
otu_mat<- read_excel("data/diet,location/otu.xlsx")
ps <- aggregate_taxa(phy20.1, "phylum")
ps <- microbiome::transform(ps, "compositional")
ps.core <- core(ps, detection = core_detection, prevalence = core_prevalence)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 18, topn=18)
Y <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Y)
{r core_phyla, echo=FALSE, message=FALSE, fig.width=10, fig.height=8, out.width="50%"}
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
kable(d)
library(knitr)
a <- aggregate_taxa(phy20.1, level = "genus")
xc <- abundances(transform(a, "compositional"))
df <- melt(xc)
names(df) <- c("Genus", "sample", "value")
dfm <- df %>% group_by(Genus) %>%
summarise(mean = round(100 * mean(value), 1),
#median = round(100 * median(value), 1),
#min = round(100 * min(value), 1),
#max = round(100 * max(value), 1),
prevalence = round(100 * prevalence(value), 1))%>%
arrange(desc(mean))
#kable(dfm)
#write.csv(dfm, file="genus table.csv")
library(data.table)
a <- data.table:::print.data.table(dfm, nrows = 18, topn=18)
Y <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Y)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
dfm$renu = str_wrap(dfm$d, width = 40)
dfm$renu <- dfm$d
Yi <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Yi)
theme_set(theme_bw(base_size = 13))
dfma <- melt(abundances(ps.core1))
dfma$Var2 <- factor(dfma$Var2, levels = rev(d$Taxon))
dfma$Var_two = str_wrap(dfma$Var2, width = 40)
p2 <- ggplot(dfma, aes(x = Var_two, y = value)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none") +
labs(y = "Relative abundance (%)", x = '', title = "Core abundance variation")
print(p2)
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(microbiome)
library(microbiome)
library(phyloseq)
library(vegan)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_location/")
opts_chunk$set(dev="CairoPNG")
# Was created with: source("create_phyloseq.R")
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
index <- "diversity_shannon"
# Estimate alpha diversities
A <- alpha(phy)
b <- meta(phy)
b2 <- bind_cols(b,A)
is.data.frame(b)
is.data.frame(b2)
z<- sapply(split(b2$diversity_shannon, b2$Geographical_location), mean)
f <- sapply(split(b2$diversity_shannon, b2$Geographical_location), sd)
v <- cbind(z,f)
kable(v)
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Geographical_location))$p.value
kruskal.test(data = df, index ~factor(Geographical_location))
library(ggbeeswarm)
p1 <- ggplot(df, aes(x = Geographical_location, y = index)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 1)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Geographical location")
print(p1)
theme_set(theme_bw(20))
sp <- microbiome::transform(phy, "compositional")
#trans <- "compositional"
pvs <- sapply(1:nsamples(sp), function (i) {kruskal.test(abundances(sp)[i,] ~ meta(sp)[, "Geographical_location"])$p.value})
padj <- p.adjust(pvs)
toptaxa <- names(which(padj < 0.05))
taxa(sp)[which(padj < 0.05)]
df <- psmelt(sp)
#names(df)
#nrow(df)
df.top <- df %>% filter(OTU %in% taxa(sp)[which(padj < 0.05)])
nrow(df.top)
library(data.table)
aa <- data.table:::print.data.table(df.top, nrows = 50, topn=50)
p <- ggplot(df.top, aes(x = genus, y = Abundance, fill = Geographical_location)) + geom_boxplot()
#print(p)
p + scale_y_log10(label = scales::percent)
theme_set(theme_bw(20))
sp <- aggregate_taxa(phy20.1, "genus")
sp <- microbiome::transform(phy, "compositional")
#trans <- "compositional"
pvs <- sapply(1:nsamples(sp), function (i) {kruskal.test(abundances(sp)[i,] ~ meta(sp)[, "Geographical_location"])$p.value})
padj <- p.adjust(pvs)
toptaxa <- names(which(padj < 0.05))
taxa(sp)[which(padj < 0.05)]
df <- psmelt(sp)
df.top <- df %>% filter(OTU %in% taxa(sp)[which(padj < 0.05)])
library(data.table)
aa <- data.table:::print.data.table(df.top, nrows = 50, topn=50)
p <- ggplot(df.top, aes(x = genus, y = Abundance, fill = Geographical_location)) + geom_boxplot()
#print(p)
p + scale_y_log10(label = scales::percent)
theme_set(theme_bw(20))
sp <- aggregate_taxa(phy, "genus")
sp <- microbiome::transform(phy, "compositional")
pvs <- sapply(1:nsamples(sp), function (i) {kruskal.test(abundances(sp)[i,] ~ meta(sp)[, "Geographical_location"])$p.value})
padj <- p.adjust(pvs)
toptaxa <- names(which(padj < 0.05))
taxa(sp)[which(padj < 0.05)]
df <- psmelt(sp)
df.top <- df %>% filter(OTU %in% taxa(sp)[which(padj < 0.05)])
library(data.table)
aa <- data.table:::print.data.table(df.top, nrows = 50, topn=50)
p <- ggplot(df.top, aes(x = genus, y = Abundance, fill = Geographical_location)) + geom_boxplot()
#print(p)
p + scale_y_log10(label = scales::percent)
theme_set(theme_bw(20))
sp <- aggregate_taxa(phy, "genus")
sp <- microbiome::transform(phy, "compositional")
pvs <- sapply(1:nsamples(sp), function (i) {kruskal.test(abundances(sp)[i,] ~ meta(sp)[, "Geographical_location"])$p.value})
padj <- p.adjust(pvs)
toptaxa <- names(which(padj < 0.05))
taxa(sp)[which(padj < 0.05)]
df <- psmelt(sp)
df.top <- df %>% filter(OTU %in% taxa(sp)[which(padj < 0.05)])
p <- ggplot(df.top, aes(x = genus, y = Abundance, fill = Geographical_location)) + geom_boxplot()
#print(p)
p + scale_y_log10(label = scales::percent)
library(knitr)
library(knitcitations)
library(microbiome)
library(phyloseq)
library(ggplot2)
library(reshape2)
library(tidyverse)
library(dada2)
library(dplyr)
library(microbiome)
library(microbiome)
library(phyloseq)
library(vegan)
theme_set(theme_bw(20))
knitr::opts_chunk$set(fig.width=10, fig.height=10, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(fig.path="figure_location/")
opts_chunk$set(dev="CairoPNG")
# Was created with: source("create_phyloseq.R")
phy <- readRDS("data/processed/phyloseq/phy20.1.RDS")
method <- "PCoA"
trans <- "compositional"
distance <- "bray"
index <- "diversity_shannon"
# Estimate alpha diversities
A <- alpha(phy)
b <- meta(phy)
b2 <- bind_cols(b,A)
is.data.frame(b)
is.data.frame(b2)
z<- sapply(split(b2$diversity_shannon, b2$Geographical_location), mean)
f <- sapply(split(b2$diversity_shannon, b2$Geographical_location), sd)
v <- cbind(z,f)
kable(v)
theme_set(theme_bw(base_size=25))
library(Cairo)
df <- meta(phy)
df <- bind_cols(df, A)
df$index <- df[[index]]
pv <- kruskal.test(data = df, index ~ factor(Geographical_location))$p.value
kruskal.test(data = df, index ~factor(Geographical_location))
library(ggbeeswarm)
p1 <- ggplot(df, aes(x = Geographical_location, y = index)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
theme(axis.text.x = element_text(angle = 0, hjust = 1)) + theme(legend.position = "none")+
labs(y = "Shannon Diversity",
x = "",
title = "Geographical location")
print(p1)
theme_set(theme_bw(20))
sp <- aggregate_taxa(phy, "genus")
sp <- microbiome::transform(phy, "compositional")
pvs <- sapply(1:nsamples(sp), function (i) {kruskal.test(abundances(sp)[i,] ~ meta(sp)[, "Geographical_location"])$p.value})
padj <- p.adjust(pvs)
toptaxa <- names(which(padj < 0.05))
taxa(sp)[which(padj < 0.05)]
df <- psmelt(sp)
df.top <- df %>% filter(OTU %in% taxa(sp)[which(padj < 0.05)])
p <- ggplot(df.top, aes(x = genus, y = Abundance, fill = Geographical_location)) + geom_boxplot()
#print(p)
p + scale_y_log10(label = scales::percent)
Y <- ggplot(dfm, aes(x = Genus, y = mean)) +
geom_boxplot() +
geom_jitter(width = 0.1) +
scale_y_log10(label = scales::percent) +
coord_flip() + theme(legend.position="none")
print(Y)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
d <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
d <- d %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(d) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(d)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
de <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(d) <- NULL
de <- de %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(de) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(de)
kable(de)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core, detection = core_detection1), 1)
de <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(de) <- NULL
de <- de %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(de) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(de)
core_detection1 <- .01/100
core_prevalence1 <- 50/100
ps <- aggregate_taxa(phy20.1, "genus")
ps <- microbiome::transform(ps, "compositional")
ps.core1 <- core(ps, detection = core_detection1, prevalence = core_prevalence1)
m <- round(100 * rowMeans(abundances(ps.core)), 1)
#median <- round(100 * apply(abundances(ps.core), 1, median), 1)
prev <- round(100 * prevalence(ps.core1, detection = core_detection), 1)
de <- as.data.frame(list(Taxon = names(m), Abundance_mean = m, Prevalence = prev))
rownames(de) <- NULL
de <- de %>% arrange(desc(Abundance_mean), desc(Prevalence))
colnames(de) <- c("Taxon", "Mean Relative abundance (%)", "Prevalence (%)")
kable(de)
knit(location.Rmd)
knit("location.Rmd")
knit("location.Rmd")
